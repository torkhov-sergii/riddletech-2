# Generated by Django 3.0.8 on 2020-10-28 15:54

import control_system_app.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Unique identificator')),
                ('serialNumber', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20)], default=1, null=True, verbose_name='Quest room serial number')),
                ('title', models.CharField(max_length=50, verbose_name='Quest room name')),
                ('startGame', models.BooleanField(default=False, verbose_name='Game state: running / stopped')),
                ('resetGame', models.BooleanField(default=False, verbose_name='Restarting the game: is a restart required?')),
                ('playersNumber', models.IntegerField(choices=[(2, 'Two'), (3, 'Three'), (4, 'Four'), (5, 'Five'), (6, 'Six')], default=2, verbose_name='Number of players')),
                ('description', models.CharField(blank=True, default='', max_length=100, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Quest room',
                'verbose_name_plural': 'Quest rooms',
            },
        ),
        migrations.CreateModel(
            name='Riddle',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Unique identificator')),
                ('serialNumber', models.IntegerField(blank=True, null=True, verbose_name='Riddle serial number')),
                ('title', models.CharField(max_length=50, verbose_name='Riddle name')),
                ('state', models.BooleanField(default=False, verbose_name='Riddle state: solved / not solved')),
                ('description', models.CharField(blank=True, default='', max_length=100, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Riddle',
                'verbose_name_plural': 'Riddles',
            },
        ),
        migrations.CreateModel(
            name='RiddleType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50, verbose_name='Riddle type')),
                ('description', models.CharField(blank=True, default='', max_length=100, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Riddle type',
                'verbose_name_plural': 'Riddle types',
            },
        ),
        migrations.CreateModel(
            name='Signal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Unique identificator')),
                ('serialNumber', models.IntegerField(blank=True, null=True, verbose_name='Signal serial number')),
                ('title', models.CharField(max_length=50, verbose_name='Signal name')),
                ('state', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, default='', max_length=100, verbose_name='Description')),
                ('riddle_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='control_system_app.Riddle', verbose_name='riddle')),
            ],
            options={
                'verbose_name': 'Signal',
                'verbose_name_plural': 'Signals',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Unique identificator')),
                ('serialNumber', models.IntegerField(blank=True, null=True, verbose_name='Room serial number')),
                ('title', models.CharField(max_length=50, verbose_name='Room name')),
                ('description', models.CharField(blank=True, default='', max_length=100, verbose_name='Description')),
                ('quest_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='control_system_app.Quest', verbose_name='quest room')),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
            },
        ),
        migrations.AddField(
            model_name='riddle',
            name='room_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='control_system_app.Room', verbose_name='room'),
        ),
        migrations.AddField(
            model_name='riddle',
            name='type_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='control_system_app.RiddleType', verbose_name='riddle type'),
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Unique identificator')),
                ('serialNumber', models.IntegerField(blank=True, null=True, verbose_name='Music serial number')),
                ('title', models.CharField(max_length=50, verbose_name='Music name')),
                ('state', models.BooleanField(default=False)),
                ('sound', models.FileField(upload_to=control_system_app.models.upload_to_music, validators=[django.core.validators.FileExtensionValidator(['mp3'])], verbose_name='music file')),
                ('description', models.CharField(blank=True, default='', max_length=100, verbose_name='Description')),
                ('riddle_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='control_system_app.Riddle', verbose_name='riddle')),
            ],
            options={
                'verbose_name': 'Music',
                'verbose_name_plural': 'Music',
            },
        ),
        migrations.CreateModel(
            name='Hint',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Unique identificator')),
                ('serialNumber', models.IntegerField(blank=True, null=True, verbose_name='Hint serial number')),
                ('title', models.CharField(max_length=50, verbose_name='Hint name')),
                ('state', models.BooleanField(default=False)),
                ('sound', models.FileField(upload_to=control_system_app.models.upload_to_hints, validators=[django.core.validators.FileExtensionValidator(['mp3'])], verbose_name='hint file')),
                ('description', models.CharField(blank=True, default='', max_length=100, verbose_name='Description')),
                ('riddle_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='control_system_app.Riddle', verbose_name='riddle')),
            ],
            options={
                'verbose_name': 'Hint',
                'verbose_name_plural': 'Hints',
            },
        ),
        migrations.CreateModel(
            name='Bypass',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Unique identificator')),
                ('serialNumber', models.IntegerField(blank=True, null=True, verbose_name='Bypass serial number')),
                ('title', models.CharField(max_length=50, verbose_name='Bypass name')),
                ('state', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, default='', max_length=100, verbose_name='Description')),
                ('riddle_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='control_system_app.Riddle', verbose_name='riddle')),
            ],
            options={
                'verbose_name': 'Bypass',
                'verbose_name_plural': 'Bypasses',
            },
        ),
    ]
